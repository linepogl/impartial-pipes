<?php

declare(strict_types=1);

use function ImpartialPipes\p_filter;
use function ImpartialPipes\p_filter_out;
use function ImpartialPipes\p_foreach;
use function ImpartialPipes\p_implode;
use function ImpartialPipes\p_map;
use function ImpartialPipes\p_take_while;

require __DIR__.'/../vendor/autoload.php';

get_defined_functions()['user']
    |> p_filter(fn(string $fqn) => str_starts_with($fqn, 'impartialpipes\\p_'))
    |> p_map(fn(string $fqn) => str_replace('impartialpipes\\', '\\ImpartialPipes\\', $fqn))
    |> p_foreach(function (string $fqn) {
        $function = new ReflectionFunction($fqn);
        $name = $function->getShortName();
        $dir = substr(dirname(realpath($function->getFileName())), strlen(realpath(__DIR__.'/../src')));

        $doc = explode("\n", $function->getDocComment())
            |> p_map(fn($line) => substr($line, 3))
            |> p_take_while(fn($line) => !str_starts_with($line, '@'))
            |> p_map(function($line)use(&$toggle) {
                if ('```' === $line && ($toggle = !$toggle)) $line = '```php';
                return $line;
            })
            |> p_implode("\n");
        @mkdir(__DIR__.'/../doc/'.$dir, recursive: true);
        file_put_contents(__DIR__."/../doc/$dir/$name.md", <<<MD
            [//]: # (This file is autogenerated)
            
            ## $name
            
            $doc
            MD);
    });

new RecursiveIteratorIterator(new RecursiveDirectoryIterator(__DIR__.'/../tst'))
    |> p_filter(static fn(SplFileInfo $file) => $file->isFile() && $file->getExtension() === 'php' && basename($file->getPath()) !== 'tst')
    |> p_foreach(static function (SplFileInfo $file) {
        $dir = substr(realpath($file->getPath()), strlen(realpath(__DIR__.'/../tst')) + 1);

        $content = file_get_contents($file->getPathname());
        if ($file->getBasename() !== 'pipe_Test.php') {
            $content = explode("\n", $content)
                |> p_filter_out(fn($line) => 'use function ImpartialPipes\pipe;' === $line)
                |> p_map(function (string $line) {
                    if ('<?php' === $line) return $line . ' // This file is autogenerated';
                    if (str_contains($line, ' pipe(') && str_ends_with($line, ')')) $line = str_replace(' pipe(', ' ', substr($line, 0, -1));
                    if (str_contains($line, ')->to(') && str_ends_with($line, ')')) $line = str_replace(')->to(', ' |> ', substr($line, 0, -1));
                    if (str_contains($line, ')->to(') && str_ends_with($line, ');')) $line = str_replace(')->to(', ' |> ', substr($line, 0, -2)) . ';';
                    if (str_contains($line, ' ->to(') && str_ends_with($line, ')')) $line = str_replace(' ->to(', ' |> ', substr($line, 0, -1));
                    if (str_contains($line, ' ->to(') && str_ends_with($line, ');')) $line = str_replace(' ->to(', ' |> ', substr($line, 0, -2)) . ';';
                    return str_replace('pipe(', '', $line);
                })
                |> p_implode("\n");
        }

        @mkdir(__DIR__.'/../tst85/'.$dir, recursive: true);
        file_put_contents(__DIR__."/../tst85/$dir/{$file->getBasename()}85", $content);
    });