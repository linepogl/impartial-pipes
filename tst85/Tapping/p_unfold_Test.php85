<?php // This file is autogenerated

declare(strict_types=1);

namespace Tests\Tapping;

use PHPUnit\Framework\TestCase;

use function ImpartialPipes\p_map;
use function ImpartialPipes\p_take;
use function ImpartialPipes\p_unfold;
use function ImpartialPipes\p_while_not_null;
use function Should\shouldIterateLike;

/**
 * @internal
 */
final class p_unfold_Test extends TestCase
{
    public function test_p_tap(): void
    {
        0
        |> p_unfold(static fn (int $x) => $x + 1)
        |> p_take(5)
        |> shouldIterateLike([0, 1, 2, 3, 4], repeatedly: true);

        new TestUnfoldNode(0, new TestUnfoldNode(1, new TestUnfoldNode(2, new TestUnfoldNode(3, new TestUnfoldNode(4)))))
        // @phpstan-ignore argument.type
        |> p_unfold(static fn (?TestUnfoldNode $x) => $x?->next)
        |> p_while_not_null()
        // @phpstan-ignore argument.type
        |> p_map(static fn (TestUnfoldNode $x) => $x->x)
        |> shouldIterateLike([0, 1, 2, 3, 4], repeatedly: true);
    }
}

class TestUnfoldNode
{
    public function __construct(
        public readonly int $x,
        public readonly ?TestUnfoldNode $next = null,
    ) {
    }
}
