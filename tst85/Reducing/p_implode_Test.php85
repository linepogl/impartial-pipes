<?php // This file is autogenerated

declare(strict_types=1);

namespace Tests\Reducing;

use PHPUnit\Framework\TestCase;
use Tests\SimpleIterator;
use Tests\UniterableArrayIterator;

use function ImpartialPipes\p_implode;
use function Should\shouldBe;

/**
 * @internal
 */
final class p_implode_Test extends TestCase
{
    public function test_p_implode_with_arrays(): void
    {
        []
        |> p_implode()
        |> shouldBe('');

        []
        |> p_implode('-')
        |> shouldBe('');

        [1, 2, 3]
        |> p_implode()
        |> shouldBe('123');

        [1, 2, 3]
        |> p_implode('-')
        |> shouldBe('1-2-3');

        [1, 'a', 3.3, null]
        |> p_implode()
        |> shouldBe('1a3.3');

        [1, 'a', 3.3, null]
        |> p_implode('-')
        |> shouldBe('1-a-3.3-');
    }

    public function test_p_implode_with_array_iterators(): void
    {
        new UniterableArrayIterator([])
        |> p_implode()
        |> shouldBe('');

        new UniterableArrayIterator([])
        |> p_implode('-')
        |> shouldBe('');

        new UniterableArrayIterator([1, 2, 3])
        |> p_implode()
        |> shouldBe('123');

        new UniterableArrayIterator([1, 2, 3])
        |> p_implode('-')
        |> shouldBe('1-2-3');

        new UniterableArrayIterator([1, 'a', 3.3, null])
        |> p_implode()
        |> shouldBe('1a3.3');

        new UniterableArrayIterator([1, 'a', 3.3, null])
        |> p_implode('-')
        |> shouldBe('1-a-3.3-');
    }

    public function test_p_implode_with_simple_iterators(): void
    {
        new SimpleIterator([])
        |> p_implode()
        |> shouldBe('');

        new SimpleIterator([])
        |> p_implode('-')
        |> shouldBe('');

        new SimpleIterator([1, 2, 3])
        |> p_implode()
        |> shouldBe('123');

        new SimpleIterator([1, 2, 3])
        |> p_implode('-')
        |> shouldBe('1-2-3');

        new SimpleIterator([1, 'a', 3.3, null])
        |> p_implode()
        |> shouldBe('1a3.3');

        new SimpleIterator([1, 'a', 3.3, null])
        |> p_implode('-')
        |> shouldBe('1-a-3.3-');
    }
}
